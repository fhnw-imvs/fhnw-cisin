// Code generated by mockery v2.46.2. DO NOT EDIT.

package servicemocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockSBOMService is an autogenerated mock type for the SBOMService type
type MockSBOMService struct {
	mock.Mock
}

type MockSBOMService_Expecter struct {
	mock *mock.Mock
}

func (_m *MockSBOMService) EXPECT() *MockSBOMService_Expecter {
	return &MockSBOMService_Expecter{mock: &_m.Mock}
}

// GenerateSBOM provides a mock function with given fields: ctx, identifier
func (_m *MockSBOMService) GenerateSBOM(ctx context.Context, identifier string) (string, error) {
	ret := _m.Called(ctx, identifier)

	if len(ret) == 0 {
		panic("no return value specified for GenerateSBOM")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (string, error)); ok {
		return rf(ctx, identifier)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) string); ok {
		r0 = rf(ctx, identifier)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, identifier)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockSBOMService_GenerateSBOM_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GenerateSBOM'
type MockSBOMService_GenerateSBOM_Call struct {
	*mock.Call
}

// GenerateSBOM is a helper method to define mock.On call
//   - ctx context.Context
//   - identifier string
func (_e *MockSBOMService_Expecter) GenerateSBOM(ctx interface{}, identifier interface{}) *MockSBOMService_GenerateSBOM_Call {
	return &MockSBOMService_GenerateSBOM_Call{Call: _e.mock.On("GenerateSBOM", ctx, identifier)}
}

func (_c *MockSBOMService_GenerateSBOM_Call) Run(run func(ctx context.Context, identifier string)) *MockSBOMService_GenerateSBOM_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *MockSBOMService_GenerateSBOM_Call) Return(_a0 string, _a1 error) *MockSBOMService_GenerateSBOM_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockSBOMService_GenerateSBOM_Call) RunAndReturn(run func(context.Context, string) (string, error)) *MockSBOMService_GenerateSBOM_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockSBOMService creates a new instance of MockSBOMService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSBOMService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockSBOMService {
	mock := &MockSBOMService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
